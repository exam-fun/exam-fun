/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    QuickSortSolution: {
      address: "0xe1da8919f262ee86f9be05059c9280142cf23f48",
      abi: [
        {
          type: "function",
          name: "run",
          inputs: [
            {
              name: "arr",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "payable",
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1743322504.json",
      deploymentScript: "Deploy.s.sol",
    },
    MergeSortSolution: {
      address: "0x0c8e79f3534b00d9a3d4a856b665bf4ebc22f2ba",
      abi: [
        {
          type: "function",
          name: "run",
          inputs: [
            {
              name: "inputArr",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "payable",
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1743322504.json",
      deploymentScript: "Deploy.s.sol",
    },
    BubbleSortSolution: {
      address: "0xed1db453c3156ff3155a97ad217b3087d5dc5f6e",
      abi: [
        {
          type: "function",
          name: "run",
          inputs: [
            {
              name: "arr",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "payable",
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1743322504.json",
      deploymentScript: "Deploy.s.sol",
    },
    QuickSortJudge: {
      address: "0xf7cd8fa9b94db2aa972023b379c7f72c65e4de9d",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_std",
              type: "address",
              internalType: "contract QuickSortSolutionInterface",
            },
            {
              name: "testCaseNumber",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "maximumListLength",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "gasLimit",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "enterJudge",
          inputs: [
            {
              name: "solutionAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Judge.JudgeResult",
              components: [
                {
                  name: "judgeState",
                  type: "uint8",
                  internalType: "enum Judge.JudgeState",
                },
                {
                  name: "gasUsed",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "otherInformation",
                  type: "string",
                  internalType: "string",
                },
              ],
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getFakeRandomUnsignedInteger",
          inputs: [
            {
              name: "max",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getFakeRandomUnsignedInteger",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1743322504.json",
      deploymentScript: "Deploy.s.sol",
    },
    Problem: {
      address: "0x12975173b87f7595ee45dffb2ab812ece596bf84",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "problemType_",
              type: "uint8",
              internalType: "enum Problem.ProblemType",
            },
            {
              name: "title_",
              type: "string",
              internalType: "string",
            },
            {
              name: "contentUri_",
              type: "string",
              internalType: "string",
            },
            {
              name: "gasLimit_",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "addAuthorizedEditor",
          inputs: [
            {
              name: "editorAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "bindJudge",
          inputs: [
            {
              name: "judgeAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getBondJudgeAddress",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getContentUri",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getGasLimit",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getSubmissionByIndex",
          inputs: [
            {
              name: "index",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Problem.Submission",
              components: [
                {
                  name: "submitterAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "solutionAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "timestamp",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "judgeResult",
                  type: "tuple",
                  internalType: "struct Judge.JudgeResult",
                  components: [
                    {
                      name: "judgeState",
                      type: "uint8",
                      internalType: "enum Judge.JudgeState",
                    },
                    {
                      name: "gasUsed",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "otherInformation",
                      type: "string",
                      internalType: "string",
                    },
                  ],
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getSubmissionNumbers",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTitle",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_authorizedEditorList",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_bestSubmissionId",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_bondJudge",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract Judge",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_contentUri",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_gasLimit",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_problemType",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "enum Problem.ProblemType",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_submissionList",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "submitterAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "solutionAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "timestamp",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "judgeResult",
              type: "tuple",
              internalType: "struct Judge.JudgeResult",
              components: [
                {
                  name: "judgeState",
                  type: "uint8",
                  internalType: "enum Judge.JudgeState",
                },
                {
                  name: "gasUsed",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "otherInformation",
                  type: "string",
                  internalType: "string",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_title",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "submitSolution",
          inputs: [
            {
              name: "solutionAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "newRecordCreated",
          inputs: [
            {
              name: "submissionId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "submitterAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "solutionAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "newSubmission",
          inputs: [
            {
              name: "submitterAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "solutionAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "timestamp",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "judgeState",
              type: "uint8",
              indexed: false,
              internalType: "enum Judge.JudgeState",
            },
            {
              name: "gasUsed",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "otherInformation",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "Problem__JudgeNotBond",
          inputs: [],
        },
        {
          type: "error",
          name: "Problem__UnauthorizedAction",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1743322504.json",
      deploymentScript: "Deploy.s.sol",
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
